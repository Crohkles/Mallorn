-- 创建SignalR通知表和邮件通知表
-- 这两个表用于管理通知的具体发送渠道

-- 1. 创建SignalR通知表
CREATE TABLE SIGNALR_NOTIFICATIONS (
    SIGNALR_NOTIFICATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOTIFICATION_ID NUMBER NOT NULL,
    CONNECTION_ID VARCHAR2(100),
    GROUP_NAME VARCHAR2(50),
    SEND_STATUS VARCHAR2(20) DEFAULT '待发送' NOT NULL,
    RETRY_COUNT NUMBER DEFAULT 0 NOT NULL,
    LAST_ATTEMPT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    SENT_AT TIMESTAMP,
    ERROR_MESSAGE VARCHAR2(500),
    
    -- 约束检查
    CONSTRAINT CK_SIGNALR_NOTIFICATIONS_SEND_STATUS 
        CHECK (SEND_STATUS IN ('待发送','成功','失败')),
    CONSTRAINT CK_SIGNALR_NOTIFICATIONS_RETRY_COUNT 
        CHECK (RETRY_COUNT >= 0),
    
    -- 外键约束
    CONSTRAINT FK_SIGNALR_NOTIFICATION_NOTIFICATION 
        FOREIGN KEY (NOTIFICATION_ID) REFERENCES NOTIFICATIONS(NOTIFICATION_ID) ON DELETE CASCADE
);

-- 2. 创建邮件通知表
CREATE TABLE EMAIL_NOTIFICATIONS (
    EMAIL_NOTIFICATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL_TYPE VARCHAR2(20) NOT NULL,
    NOTIFICATION_ID NUMBER,
    RECIPIENT_EMAIL VARCHAR2(100) NOT NULL,
    SUBJECT VARCHAR2(200) NOT NULL,
    CONTENT CLOB NOT NULL,
    VERIFICATION_CODE VARCHAR2(10),
    CODE_EXPIRES_AT TIMESTAMP,
    SEND_STATUS VARCHAR2(20) DEFAULT '待发送' NOT NULL,
    RETRY_COUNT NUMBER DEFAULT 0 NOT NULL,
    LAST_ATTEMPT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    SENT_AT TIMESTAMP,
    ERROR_MESSAGE VARCHAR2(500),
    
    -- 约束检查
    CONSTRAINT CK_EMAIL_NOTIFICATIONS_EMAIL_TYPE 
        CHECK (EMAIL_TYPE IN ('通知','验证码')),
    CONSTRAINT CK_EMAIL_NOTIFICATIONS_SEND_STATUS 
        CHECK (SEND_STATUS IN ('待发送','成功','失败')),
    CONSTRAINT CK_EMAIL_NOTIFICATIONS_RETRY_COUNT 
        CHECK (RETRY_COUNT >= 0),
    
    -- 外键约束（验证码类型时可为空）
    CONSTRAINT FK_EMAIL_NOTIFICATION_NOTIFICATION 
        FOREIGN KEY (NOTIFICATION_ID) REFERENCES NOTIFICATIONS(NOTIFICATION_ID) ON DELETE SET NULL
);

-- 3. 创建SignalR通知表的索引
CREATE INDEX IX_SIGNALR_NOTIFICATIONS_NOTIFICATION_ID ON SIGNALR_NOTIFICATIONS(NOTIFICATION_ID);
CREATE INDEX IX_SIGNALR_NOTIFICATIONS_SEND_STATUS ON SIGNALR_NOTIFICATIONS(SEND_STATUS);
CREATE INDEX IX_SIGNALR_NOTIFICATIONS_CONNECTION_ID ON SIGNALR_NOTIFICATIONS(CONNECTION_ID);
CREATE INDEX IX_SIGNALR_NOTIFICATIONS_CREATED_AT ON SIGNALR_NOTIFICATIONS(CREATED_AT);

-- 4. 创建邮件通知表的索引
CREATE INDEX IX_EMAIL_NOTIFICATIONS_NOTIFICATION_ID ON EMAIL_NOTIFICATIONS(NOTIFICATION_ID);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_EMAIL_TYPE ON EMAIL_NOTIFICATIONS(EMAIL_TYPE);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_SEND_STATUS ON EMAIL_NOTIFICATIONS(SEND_STATUS);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_RECIPIENT_EMAIL ON EMAIL_NOTIFICATIONS(RECIPIENT_EMAIL);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_CREATED_AT ON EMAIL_NOTIFICATIONS(CREATED_AT);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_VERIFICATION_CODE ON EMAIL_NOTIFICATIONS(VERIFICATION_CODE);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_CODE_EXPIRES ON EMAIL_NOTIFICATIONS(CODE_EXPIRES_AT);

-- 5. 创建复合索引
CREATE INDEX IX_EMAIL_NOTIFICATIONS_TYPE_STATUS ON EMAIL_NOTIFICATIONS(EMAIL_TYPE, SEND_STATUS);
CREATE INDEX IX_EMAIL_NOTIFICATIONS_EMAIL_TYPE ON EMAIL_NOTIFICATIONS(RECIPIENT_EMAIL, EMAIL_TYPE);

-- 6. 为表添加注释
COMMENT ON TABLE SIGNALR_NOTIFICATIONS IS 'SignalR通知发送记录表';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.SIGNALR_NOTIFICATION_ID IS 'SignalR通知ID';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.NOTIFICATION_ID IS '关联的通知ID';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.CONNECTION_ID IS 'SignalR连接ID';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.GROUP_NAME IS '用户组名称（用于群发）';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.SEND_STATUS IS '发送状态：待发送、成功、失败';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.RETRY_COUNT IS '重试次数';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.LAST_ATTEMPT_TIME IS '最后尝试发送时间';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.CREATED_AT IS '创建时间';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.SENT_AT IS '发送成功时间';
COMMENT ON COLUMN SIGNALR_NOTIFICATIONS.ERROR_MESSAGE IS '错误信息';

COMMENT ON TABLE EMAIL_NOTIFICATIONS IS '邮件通知发送记录表';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.EMAIL_NOTIFICATION_ID IS '邮件通知ID';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.EMAIL_TYPE IS '邮件类型：通知、验证码';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.NOTIFICATION_ID IS '关联的通知ID（验证码类型时可为空）';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.RECIPIENT_EMAIL IS '收件人邮箱地址';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.SUBJECT IS '邮件主题';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.CONTENT IS '邮件内容（HTML格式）';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.VERIFICATION_CODE IS '验证码（仅验证码类型使用）';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.CODE_EXPIRES_AT IS '验证码过期时间（仅验证码类型使用）';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.SEND_STATUS IS '发送状态：待发送、成功、失败';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.RETRY_COUNT IS '重试次数';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.LAST_ATTEMPT_TIME IS '最后尝试发送时间';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.CREATED_AT IS '创建时间';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.SENT_AT IS '发送成功时间';
COMMENT ON COLUMN EMAIL_NOTIFICATIONS.ERROR_MESSAGE IS '错误信息';

-- 提交更改
COMMIT;
